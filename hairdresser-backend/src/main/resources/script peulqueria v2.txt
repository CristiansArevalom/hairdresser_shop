--create user dba_peluqueria identified by 1234567890;
--grant sysdba to dba_peluqueria;
-- para ver los privilegios que se tienen
/*
select
    lpad(' ', 2*level)  || granted_role "User, his roles and privileges"
  from
     --THE USERS
      select
        null     grantee,
        username granted_role
      from
        dba_users
      where
        username like upper('%&enter_username%')
    --THE ROLES TO ROLES RELATIONS 
    union
      select
        grantee,
        granted_role
      from
        dba_role_privs
    --THE ROLES TO PRIVILEGE RELATIONS 
    union
      select
        grantee,
        privilege
      from
        dba_sys_privs
    )
  start with grantee is null
  connect by grantee = prior granted_role;
*/

grant ADMINISTER ANY SQL TUNING SET to dba_peluqueria
grant ADMINISTER DATABASE TRIGGER to dba_peluqueria
grant ADMINISTER RESOURCE MANAGER to dba_peluqueria
grant ADMINISTER SQL MANAGEMENT OBJECT to dba_peluqueria
grant ADMINISTER SQL TUNING SET to dba_peluqueria
grant ADVISOR to dba_peluqueria
grant ALTER ANY ANALYTIC VIEW to dba_peluqueria
grant ALTER ANY ASSEMBLY to dba_peluqueria
grant ALTER ANY ATTRIBUTE DIMENSION to dba_peluqueria
grant ALTER ANY CLUSTER to dba_peluqueria
grant ALTER ANY CUBE to dba_peluqueria
grant ALTER ANY CUBE BUILD PROCESS to dba_peluqueria
grant ALTER ANY CUBE DIMENSION to dba_peluqueria
grant ALTER ANY DIMENSION to dba_peluqueria
grant ALTER ANY EDITION to dba_peluqueria
grant ALTER ANY EVALUATION CONTEXT to dba_peluqueria
grant ALTER ANY HIERARCHY to dba_peluqueria
grant ALTER ANY INDEX to dba_peluqueria
grant ALTER ANY INDEXTYPE to dba_peluqueria
grant ALTER ANY LIBRARY to dba_peluqueria
grant ALTER ANY MATERIALIZED VIEW to dba_peluqueria
grant ALTER ANY MEASURE FOLDER to dba_peluqueria
grant ALTER ANY MINING MODEL to dba_peluqueria
grant ALTER ANY OPERATOR to dba_peluqueria
grant ALTER ANY OUTLINE to dba_peluqueria
grant ALTER ANY PROCEDURE to dba_peluqueria
grant ALTER ANY ROLE to dba_peluqueria
grant ALTER ANY RULE to dba_peluqueria
grant ALTER ANY RULE SET to dba_peluqueria
grant ALTER ANY SEQUENCE to dba_peluqueria
grant ALTER ANY SQL PROFILE to dba_peluqueria
grant ALTER ANY SQL TRANSLATION PROFILE to dba_peluqueria
grant ALTER ANY TABLE to dba_peluqueria
grant ALTER ANY TRIGGER to dba_peluqueria
grant ALTER ANY TYPE to dba_peluqueria
grant ALTER DATABASE to dba_peluqueria
grant ALTER LOCKDOWN PROFILE to dba_peluqueria
grant ALTER PROFILE to dba_peluqueria
grant ALTER RESOURCE COST to dba_peluqueria
grant ALTER ROLLBACK SEGMENT to dba_peluqueria
grant ALTER SESSION to dba_peluqueria
grant ALTER SYSTEM to dba_peluqueria
grant ALTER TABLESPACE to dba_peluqueria
grant ALTER USER to dba_peluqueria
grant ANALYZE ANY to dba_peluqueria
grant ANALYZE ANY DICTIONARY to dba_peluqueria
grant AUDIT ANY to dba_peluqueria
grant AUDIT SYSTEM to dba_peluqueria
grant BACKUP ANY TABLE to dba_peluqueria
grant BECOME USER to dba_peluqueria
grant CAPTURE_ADMIN to dba_peluqueria
grant CHANGE NOTIFICATION to dba_peluqueria
grant COMMENT ANY MINING MODEL to dba_peluqueria
grant COMMENT ANY TABLE to dba_peluqueria
grant CREATE ANALYTIC VIEW to dba_peluqueria
grant CREATE ANY ANALYTIC VIEW to dba_peluqueria
grant CREATE ANY ASSEMBLY to dba_peluqueria
grant CREATE ANY ATTRIBUTE DIMENSION to dba_peluqueria
grant CREATE ANY CLUSTER to dba_peluqueria
grant CREATE ANY CONTEXT to dba_peluqueria
grant CREATE ANY CREDENTIAL to dba_peluqueria
grant CREATE ANY CUBE to dba_peluqueria
grant CREATE ANY CUBE BUILD PROCESS to dba_peluqueria
grant CREATE ANY CUBE DIMENSION to dba_peluqueria
grant CREATE ANY DIMENSION to dba_peluqueria
grant CREATE ANY DIRECTORY to dba_peluqueria
grant CREATE ANY EDITION to dba_peluqueria
grant CREATE ANY EVALUATION CONTEXT to dba_peluqueria
grant CREATE ANY HIERARCHY to dba_peluqueria
grant CREATE ANY INDEX to dba_peluqueria
grant CREATE ANY INDEXTYPE to dba_peluqueria
grant CREATE ANY JOB to dba_peluqueria
grant CREATE ANY LIBRARY to dba_peluqueria
grant CREATE ANY MATERIALIZED VIEW to dba_peluqueria
grant CREATE ANY MEASURE FOLDER to dba_peluqueria
grant CREATE ANY MINING MODEL to dba_peluqueria
grant CREATE ANY OPERATOR to dba_peluqueria
grant CREATE ANY OUTLINE to dba_peluqueria
grant CREATE ANY PROCEDURE to dba_peluqueria
grant CREATE ANY RULE to dba_peluqueria
grant CREATE ANY RULE SET to dba_peluqueria
grant CREATE ANY SEQUENCE to dba_peluqueria
grant CREATE ANY SQL PROFILE to dba_peluqueria
grant CREATE ANY SQL TRANSLATION PROFILE to dba_peluqueria
grant CREATE ANY SYNONYM to dba_peluqueria
grant CREATE ANY TABLE to dba_peluqueria
grant CREATE ANY TRIGGER to dba_peluqueria
grant CREATE ANY TYPE to dba_peluqueria
grant CREATE ANY VIEW to dba_peluqueria
grant CREATE ASSEMBLY to dba_peluqueria
grant CREATE ATTRIBUTE DIMENSION to dba_peluqueria
grant CREATE CLUSTER to dba_peluqueria
grant CREATE CREDENTIAL to dba_peluqueria
grant CREATE CUBE to dba_peluqueria
grant CREATE CUBE BUILD PROCESS to dba_peluqueria
grant CREATE CUBE DIMENSION to dba_peluqueria
grant CREATE ROLE to dba_peluqueria;
grant ALTER ANY ROLE to dba_peluqueria;
grant DROP ANY ROLE to dba_peluqueria;



GRANT ALL PRIVILEGES ON SERVICIO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON SALON_BELLEZA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON ESTANTERIA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON CATEGORIA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON PRODUCTO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON CARGO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON EMPLEADO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON HORARIO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON HORARIO_ASIGNADO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON CLIENTE TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON CITA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON DETALLE_CITA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON PROVEEDOR TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON PEDIDO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON DETALLE_PEDIDO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON INVENTARIO TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON VENTA TO DBA_PELUQUERIA;
GRANT ALL PRIVILEGES ON DETALLE_VENTA TO DBA_PELUQUERIA;
GRANT SELECT FROM USER_TABLES;





DROP TABLE SERVICIO CASCADE CONSTRAINTS;
DROP TABLE SALON_BELLEZA CASCADE CONSTRAINTS;
DROP TABLE ESTANTERIA CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE CARGO CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE HORARIO CASCADE CONSTRAINTS;
DROP TABLE HORARIO_ASIGNADO CASCADE CONSTRAINTS;
DROP TABLE CLIENTE CASCADE CONSTRAINTS;
DROP TABLE CITA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_CITA CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE PEDIDO CASCADE CONSTRAINTS;
DROP TABLE DETALLE_PEDIDO CASCADE CONSTRAINTS;
DROP TABLE INVENTARIO CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;

CREATE TABLE CARGO(
ID_CARGO NUMBER (20) CONSTRAINT CARGO_ID_CARGO_PK PRIMARY KEY,
NOMBRE VARCHAR2 (20) NOT NULL,
SALARIO NUMBER (20,2) NOT NULL
);

create table SERVICIO (
id_servicio Number (20) CONSTRAINT SERVICIO_ID_SERVICIO_PK PRIMARY KEY,
NOMBRE VARCHAR2(100) NOT NULL,
DESCRIPCION VARCHAR2(500),
PRECIO NUMBER (10,2) NOT NULL,
DURACION NUMBER (8) NOT NULL
);

CREATE TABLE SALON_BELLEZA(
ID_SALON NUMBER (20) CONSTRAINT SALON_BELLEZA_ID_SALON_PK PRIMARY KEY,
NIT NUMBER (25) UNIQUE NOT NULL,
NOMBRE VARCHAR2(100) NOT NULL,
DIRECCION VARCHAR2 (40) NOT NULL,
TELEFONO NUMBER (12)
);

create table estanteria(
id_estanteria Number (20) constraint ESTANTERIA_ID_ESTANTERIA_PK PRIMARY KEY,
DESCRIPCION VARCHAR2 (100),
ID_SALON NUMBER (20),
CONSTRAINT ESTANTERIA_ID_SALON_FK FOREIGN KEY (ID_SALON) REFERENCES SALON_BELLEZA (ID_SALON)
);

CREATE TABLE CATEGORIA(
ID_CATEGORIA NUMBER (20) CONSTRAINT CATEGORIA_ID_CATEGORIA_PK PRIMARY KEY,
NOMBRE VARCHAR2 (100) NOT NULL,
DESCRIPCION VARCHAR2 (100)
);

CREATE TABLE PRODUCTO(
ID_PRODUCTO NUMBER (20) CONSTRAINT PRODUCTO_ID_PRODUCTO_PK PRIMARY KEY,
NOMBRE VARCHAR2(100) NOT NULL,
DESCRIPCION VARCHAR2(100)
);



CREATE TABLE EMPLEADO
(ID_EMPLEADO NUMBER(20) CONSTRAINT EMPLEADO_ID_EMPLEADO_PK PRIMARY KEY,
NOMBRE VARCHAR2(10) NOT NULL,
APELLIDO VARCHAR2(10) NOT NULL,
DOCUMENTO NUMBER (12) CONSTRAINT EMPLEADO_DOCUMENTO_UK UNIQUE NOT NULL,
GENERO CHAR(1) NOT NULL,
FECHA_NACIMIENTO DATE,
TELEFONO NUMBER(12) NOT NULL,
DIRECCION VARCHAR2 (50) NOT NULL,
ID_CARGO NUMBER (2) NOT NULL,
CONTRASEÑA VARCHAR2 (50) NOT NULL,
CONSTRAINT EMP_ID_CARGO_FK FOREIGN KEY (ID_CARGO) REFERENCES CARGO (ID_CARGO),
CONSTRAINT EMP_EMAIL_UK UNIQUE (EMAIL),
CONSTRAINT EMP_GENERO_UK CHECK (GENERO IN ('M','F'))
);

CREATE TABLE HORARIO (
ID_HORARIO NUMBER (20) CONSTRAINT HORARIO_ID_HORARIO_PK PRIMARY KEY,
INICIO_TURNO DATE,
FIN_TURNO DATE
);

CREATE TABLE HORARIO_ASIGNADO (
ID_HORARIO_ASIGNADO NUMBER (20) CONSTRAINT HORARIO_ASIGNADO_ID_HORARIO_ASIGNADO_PK PRIMARY KEY,
DIA VARCHAR2 (100) NOT NULL,
ID_CARGO NUMBER (20),
ID_HORARIO NUMBER (20),
CONSTRAINT HORARIO_ASIGNADO_ID_CARGO_FK FOREIGN KEY (ID_CARGO) REFERENCES CARGO (ID_CARGO),
CONSTRAINT HORARIO_ASIGNADO_ID_HORARIO_FK FOREIGN KEY (ID_HORARIO) REFERENCES HORARIO (ID_HORARIO)
);

CREATE TABLE CLIENTE
(ID_CLIENTE NUMBER (20) CONSTRAINT CLI_ID_CLIENTE_PK PRIMARY KEY,
DOCUMENTO NUMBER(12),
NOMBRE VARCHAR2 (10) NOT NULL,
APELLIDO VARCHAR2 (10) NOT NULL,
GENERO CHAR (1) NOT NULL,
TELEFONO NUMBER (12),
DIRECCION VARCHAR2(100) NOT NULL,
EMAIL VARCHAR2(100),
CONTRASEÑA VARCHAR2(50) NOT NULL,
CONSTRAINT CLI_DOCUMENTO_UK UNIQUE (DOCUMENTO),
CONSTRAINT CLI_EMAIL_UK UNIQUE (EMAIL),
CONSTRAINT CLI_GENERO_CK CHECK (GENERO IN ('M','F'))
);

CREATE TABLE CITA(
ID_CITA NUMBER (20) CONSTRAINT CITA_ID_CITA_PK PRIMARY KEY,
FECHA DATE NOT NULL,
PRECIO_TOTAL NUMBER (10,2),
ID_CLIENTE NUMBER (20) NOT NULL,
ID_EMPLEADO NUMBER (20) NOT NULL,
CONSTRAINT CITA_ID_CLIENTE_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE),
CONSTRAINT CITA_ID_EMPLEADO_FK FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO)
);


CREATE TABLE DETALLE_CITA (
ID_DETALLE_CITA NUMBER (20) CONSTRAINT DET_CITA_ID_DET_CITA_PK PRIMARY KEY,
ID_SERVICIO NUMBER (20), 
ID_CITA NUMBER (20),
CONSTRAINT DET_CITA_ID_CITA_FK FOREIGN KEY (ID_CITA) REFERENCES CITA (ID_CITA),
CONSTRAINT DET_CITA_ID_SERVICIO_FK FOREIGN KEY (ID_SERVICIO) REFERENCES SERVICIO (ID_SERVICIO) 
);

CREATE TABLE PROVEEDOR
(ID_PROVEEDOR NUMBER (3) CONSTRAINT PROV_ID_PROVEEDOR_PK PRIMARY KEY,
NOMBRE VARCHAR2(100) NOT NULL,
DIRECCION VARCHAR2(100) NOT NULL,
TELEFONO NUMBER(12) NOT NULL
);

CREATE TABLE PEDIDO
(ID_PEDIDO NUMBER(3) CONSTRAINT PED_ID_PEDIDO_PK PRIMARY KEY,
ID_PROVEEDOR NUMBER(3) NOT NULL,
ID_EMPLEADO NUMBER (3) NOT NULL,
FECHA DATE,
CONSTRAINT PED_ID_PROVEEDOR_FK FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR (ID_PROVEEDOR),
CONSTRAINT PED_ID_EMPLEADO_FK FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO)
);


CREATE TABLE DETALLE_PEDIDO
(ID_DETALLE_PEDIDO NUMBER (3) CONSTRAINT DETPED_ID_DETALLE_PEDIDO PRIMARY KEY,
ID_PEDIDO NUMBER (3) NOT NULL, 
CONSTRAINT DETPED_ID_PEDIDO_FK FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO (ID_PEDIDO)
);

CREATE TABLE INVENTARIO
(CODIGO_BARRAS NUMBER (12) CONSTRAINT INV_COD_BARRAS_PK PRIMARY KEY,
FECHA_VENCIMIENTO DATE,
FECHA_INGRESO DATE NOT NULL,
ESTADO VARCHAR2(10) NOT NULL,
ID_PRODUCTO NUMBER (6) NOT NULL,
PRECIO_COMPRA NUMBER (10,2) NOT NULL,--10 DIGITOS CON 2 CIFRAS
PRECIO_VENTA NUMBER (10,2) NOT NULL,--10 DIGITOS CON 2 CIFRAS
ID_ESTANTERIA NUMBER (20) NOT NULL,
id_DETALLE_pedido NUMBER (3) NOT NULL,
CONSTRAINT INV_ID_ESTANTERIA_FK FOREIGN KEY (ID_ESTANTERIA) REFERENCES ESTANTERIA (ID_ESTANTERIA),
CONSTRAINT INV_ID_PRODUCTO_FK FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO (ID_PRODUCTO),
CONSTRAINT INV_ID_DET_PEDIDO_FK FOREIGN KEY (ID_DETALLE_PEDIDO) REFERENCES DETALLE_PEDIDO (ID_DETALLE_PEDIDO)
);


CREATE TABLE VENTA(
ID_VENTA NUMBER(20) CONSTRAINT VENTA_ID_VENTA_PK PRIMARY KEY,
FECHA_VENTA DATE NOT NULL,
PRECIO_TOTAL NUMBER (10,2) NOT NULL,
ID_EMPLEADO NUMBER (20),
ID_CLIENTE NUMBER (20),
CONSTRAINT VENTA_ID_EMPLEADO_FK FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO (ID_EMPLEADO),
CONSTRAINT VENTA_ID_CLIENTE_FK FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE)
);


CREATE TABLE DETALLE_VENTA(
ID_DETALLE_VENTA NUMBER (20) CONSTRAINT DET_VENTA_ID_DET_VENTA_PK PRIMARY KEY,
ID_VENTA NUMBER (4) NOT NULL,
CODIGO_BARRAS NUMBER (12) NOT NULL,
PRECIO_VENTA NUMBER (10,2) NOT NULL,--10 DIGITOS CON 2 CIFRAS
CONSTRAINT DETVENTA_ID_VENTA_FK FOREIGN KEY (ID_VENTA) REFERENCES VENTA (ID_VENTA),
CONSTRAINT DETFAC_CODIGO_BARRAS_FK FOREIGN KEY (CODIGO_BARRAS) REFERENCES INVENTARIO (CODIGO_BARRAS)
);

CREATE SEQUENCE CLIENTE_ID_CLIENTE
INCREMENT BY 1
START WITH 1
 MAXVALUE 999
 NOCACHE
 NOCYCLE;




alter session set "_ORACLE_SCRIPT"=true;
-------roles
drop role Administrador;
drop role Vendedor;
drop ROLE Cliente;
CREATE ROLE Administrador;
CREATE ROLE Vendedor;
CREATE ROLE Cliente;


GRANT INSERT,SELECT,DELETE,UPDATE (NOMBRE,DESCRIPCION,PRECIO,DURACION)
ON SERVICIO
TO Administrador;

GRANT SELECT,UPDATE (NIT,NOMBRE,DIRECCION,TELEFONO)
ON SALON_BELLEZA
TO Administrador;


GRANT INSERT,SELECT,DELETE,UPDATE (NOMBRE,DESCRIPCION)
ON CATEGORIA
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (NOMBRE,DESCRIPCION)
ON PRODUCTO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (NOMBRE,SALARIO)
ON CARGO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (NOMBRE,APELLIDO,DOCUMENTO,GENERO,FECHA_NACIMIENTO,TELEFONO,DIRECCION,ID_CARGO) 
ON EMPLEADO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (INICIO_TURNO,FIN_TURNO)
ON HORARIO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (DIA)
ON HORARIO_ASIGNADO
TO Administrador;

GRANT INSERT,SELECT,DELETE ,UPDATE (DOCUMENTO,NOMBRE,APELLIDO,GENERO,TELEFONO,DIRECCION,EMAIL) 
ON CLIENTE
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (FECHA,PRECIO_TOTAL)
ON CITA
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (ID_SERVICIO,ID_CITA)
ON DETALLE_CITA
TO Administrador;

GRANT INSERT,SELECT,DELETE ,UPDATE (NOMBRE,DIRECCION,TELEFONO) 
ON PROVEEDOR
TO Administrador;

GRANT INSERT,SELECT,DELETE ,UPDATE (FECHA) 
ON PEDIDO
TO Administrador;

GRANT INSERT,SELECT,DELETE
ON DETALLE_PEDIDO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (FECHA_VENCIMIENTO,FECHA_INGRESO,ESTADO,PRECIO_COMPRA,PRECIO_VENTA) 
ON INVENTARIO
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (ID_CLIENTE,FECHA_VENTA,PRECIO_TOTAL,ID_EMPLEADO)
ON VENTA
TO Administrador;

GRANT INSERT,SELECT,DELETE,UPDATE (ID_venta,CODIGO_BARRAS,precio_venta)
ON DETALLE_VENTA
TO Administrador;

GRANT SELECT
ON CLIENTE
TO vendedor;

grant select 
on estanteria
to vendedor;

grant select, INSERT on categoria to vendedor;

GRANT SELECT,insert (NOMBRE,DESCRIPCION) ON PRODUCTO TO vendedor;

GRANT INSERT,SELECT,UPDATE (FECHA_VENCIMIENTO,FECHA_INGRESO,ESTADO,PRECIO_COMPRA,PRECIO_VENTA) 
ON INVENTARIO
TO VENDEDOR;

GRANT SELECT,insert (ID_CLIENTE,FECHA_VENTA,PRECIO_TOTAL,ID_EMPLEADO)
ON VENTA
TO vendedor;

GRANT SELECT,INSERT (codigo_barras,id_venta)
ON DETALLE_VENTA
TO vendedor;

GRANT SELECT,insert (FECHA) 
ON PEDIDO
TO VENDEDOR;

GRANT INSERT,SELECT
ON DETALLE_PEDIDO
TO VENDEDOR;

GRANT INSERT,SELECT,DELETE,UPDATE (FECHA,PRECIO_TOTAL)
ON CITA
TO vendedor;

GRANT INSERT,SELECT,DELETE,UPDATE (ID_SERVICIO,ID_CITA)
ON DETALLE_CITA
TO vendedor;

GRANT select ON SERVICIO TO vendedor;

GRANT SELECT ON INVENTARIO
TO cliente;

GRANT SELECT
ON CITA
TO cliente;

GRANT SELECT
ON DETALLE_CITA
TO cliente;

insert into servicio values (1,'corte de pelo','El corte se realizara con maquina y tijera','5000',15);


insert into salon_belleza (id_salon,nit,nombre,direccion,telefono)
values(
1,123456789,'mary','Avenida siempre viva 123',54321
);

insert into estanteria (id_estanteria,descripcion,id_salon)
values(1,'estanteria1',1);

insert into categoria (id_categoria,nombre,descripcion)
values (1,'shampoo','Utilizado para limpiar cabello');

insert into producto (id_producto,nombre,descripcion)
values (100001,'NUTRI CELL','Diseñado como el paso del Pre-Tratamiento');

insert into producto (id_producto,nombre,descripcion)
values (100002,'KONZIL','Diseñado como el paso del Pre-Tratamiento');

insert into cargo (id_cargo,nombre,salario)
values(
1,'Estilista',856000
);

iNSERT INTO EMPLEADO (ID_EMPLEADO,NOMBRE,APELLIDO,DOCUMENTO,GENERO,FECHA_NACIMIENTO,TELEFONO,DIRECCION,ID_CARGO)
VALUES(1,'Marina','Mesa',1234567890,'F',to_date('2-4-1981','dd-mm-yyyy'),312345678910,'CALLE 39 SUR NO 7D',1);

INSERT INTO HORARIO (ID_HORARIO,INICIO_TURNO,FIN_TURNO)
VALUES (101,TO_DATE('8:30:00','HH24:MI:SS'),TO_DATE('19:30:00','HH24:MI:SS'));

INSERT INTO HORARIO_ASIGNADO (ID_HORARIO_ASIGNADO,DIA,ID_CARGO,ID_HORARIO)
VALUES(1,'Lunes',1,101);
DESCRIBE HORARIO_ASIGNADO;

INSERT INTO CLIENTE (ID_CLIENTE,DOCUMENTO,NOMBRE,APELLIDO,GENERO,TELEFONO,DIRECCION,EMAIL)
VALUES (1,123456755,'Gabriel','Gomez','M',null,'calle 123','correo_cliente');

INSERT INTO CITA (ID_CITA,FECHA,PRECIO_TOTAL,ID_CLIENTE,ID_EMPLEADO)
VALUES(1,to_date('2-4-1981 8:30:25','dd-mm-yyyy hh:mi:ss'),5000,1,1);

INSERT INTO DETALLE_CITA (ID_DETALLE_CITA,ID_SERVICIO,ID_CITA)
VALuES ( 1,1,1);


INSERT INTO PROVEEDOR (ID_PROVEEDOR,NOMBRE,DIRECCION,TELEFONO)
VALUES(1,'nancy','Calle 12 # 34 - 30', 3649000);

INSERT INTO PEDIDO (ID_PEDIDO,ID_PROVEEDOR,ID_EMPLEADO,FECHA)
VALUES (1,1,1,TO_DATE('20-9-2018 12:25:11','DD-MM-YYYY HH24:MI:SS'));


INSERT INTO DETALLE_PEDIDO (ID_DETALLE_PEDIDO,ID_PEDIDO)
VALUES (1,1);

INSERT INTO INVENTARIO
(CODIGO_BARRAS,FECHA_VENCIMIENTO,FECHA_INGRESO,ESTADO,ID_PRODUCTO,PRECIO_COMPRA,PRECIO_VENTA,ID_ESTANTERIA,ID_DETALLE_PEDIDO)
VALUES (423698439757,null,TO_DATE('20-9-2018 12:25:11','DD-MM-YYYY HH24:MI:SS'),'Disponible',100001,2000,4272,1,1);

INSERT INTO INVENTARIO
(CODIGO_BARRAS,FECHA_VENCIMIENTO,FECHA_INGRESO,ESTADO,ID_PRODUCTO,PRECIO_COMPRA,PRECIO_VENTA,ID_ESTANTERIA,ID_DETALLE_PEDIDO)
VALUES (123698439757,TO_DATE('10-7-2020 12:25:11','DD-MM-YYYY HH24:MI:SS'),TO_DATE('10-7-2020 12:25:11','DD-MM-YYYY HH24:MI:SS'),'Vendido',100002,2000,4272,1,1);

SELECT  * FROM INVENTARIO;

INSERT INTO VENTA (ID_VENTA,FECHA_VENTA,PRECIO_TOTAL,ID_EMPLEADO,ID_CLIENTE)
VALUES (101, SYSDATE,4272,1,1);

INSERT INTO DETALLE_VENTA (ID_DETALLE_VENTA,ID_VENTA,CODIGO_BARRAS,PRECIO_VENTA)
VALUES(3,101,123698439757,4272);

COMMIT;
--
/* crea vista para poder ver las citas asignadas del cliente*/
/*crear vista para poder ver las citas asignadas por empleado*/
/*crear vista para ver los productos del inventario que esten disponibles*/
--

SELECT * FROM CITA;

--CREATE VIEW V_CITAS_CLIENTE ( ID_CITA,CLIENTE,FECHA,SERVICIO,DESCRIPCION,PRECIO_SERVICIO,EMPLEADO)
CREATE OR REPLACE VIEW V_CITAS_PELUQUERIA ( ID_CITA,CLIENTE,fecha,servicio,precio_servicio,empleado)
AS SELECT CITA.ID_CITA,CLIENTE.NOMBRE || ' ' ||cliente.apellido,TO_CHAR(cita.fecha,'DD/MM/YYYY HH24:MI') as fecha,
servicio.nombre as servicio, servicio.precio as precio_servicio, empleado.nombre || ' ' || empleado.apellido
FROM 
(((
(CITA INNER JOIN CLIENTE ON cita.id_CLIENTE = cliente.id_cliente)
inner join detalle_cita on detalle_cita.id_cita = cita.id_cita)
inner join servicio on detalle_cita.id_servicio = servicio.id_servicio)
inner join empleado on cita.id_empleado = empleado.id_empleado)
;


/*crear vista para ver los productos del inventario que esten disponibles*/
CREATE OR REPLACE VIEW V_PRODUCTO_DISPONIBLES (NOMBRE,PRECIO,descripcion)
AS SELECT DISTINCT P.NOMBRE, INV.PRECIO_VENTA, p.descripcion
FROM PRODUCTO P, INVENTARIO INV
WHERE (INV.ID_PRODUCTO = P.ID_PRODUCTO AND INV.ESTADO = 'Disponible');
select * from v_producto_disponibles;


select * from inventario;
--productos que en el inventario tengan menos de 10 registros con estado disponible o su fecha de vencimiento esta a 3 dias del sysdate;

/*crear vista para avisar los productos que estan por agotarse*/
select p.nombre, count(*) from inventario inv, producto p
where( (inv.id_producto = p.id_producto) AND  (estado = 'Disponible'))
group by p.nombre
having count (*) <3;


--PRODUCTOS QUE TIENEN 5 DIAS PARA VENCERSE
SELECT INV.CODIGO_BARRAS, INV.FECHA_VENCIMIENTO, P.NOMBRE
FROM INVENTARIO INV, PRODUCTO P
WHERE ((inv.id_producto = p.id_producto)) AND (
(INV.estado = 'Disponible') AND ((inv.fecha_vencimiento+5)< SYSDATE  )) ;

--FACTURA VENTA

CREATE OR REPLACE VIEW VIEW_FACTURAS (ID_VENTA,EMPLEADO,CODIGO_BARRAS,PRODUCTO,CLIENTE,PRECIO)
AS SELECT VENTA.ID_VENTA,E.NOMBRE,E.ID_EMPLEADO,TO_CHAR(DETFAC.CODIGO_BARRAS),P.NOMBRE,C.NOMBRE,INV.PRECIO_VENTA
FROM (((((
VENTA INNER JOIN DETALLE_VENTA DETFAC ON VENTA.ID_VENTA = DETFAC.ID_VENTA)
INNER JOIN EMPLEADO E ON E.ID_EMPLEADO= VENTA.ID_EMPLEADO)
INNER JOIN INVENTARIO INV ON INV.CODIGO_BARRAS= DETFAC.CODIGO_BARRAS)
INNER JOIN PRODUCTO P ON P.ID_PRODUCTO=INV.ID_PRODUCTO)
INNER JOIN CLIENTE C ON C.ID_CLIENTE=VENTA.ID_CLIENTE)
ORDER BY ID_VENTA ASC;
SELECT * FROM VENTA;

SELECT VENTA.ID_VENTA as "FACTURA DE VENTA", TO_CHAR(venta.fecha_venta,'DD/MM/YYYY HH24:MI') AS "Fecha Venta", e.nombre || ' ' || e.apellido as "Cajero", c.nombre || ' ' || c.apellido as "Ciente",c.documento as "CC"
,p.nombre as producto,count (*) as "Cantidad", inv.precio_venta as "Precio venta", sum(inv.precio_venta) as "total"
FROM (((((
VENTA INNER JOIN DETALLE_VENTA DETVENTA ON VENTA.ID_VENTA = DETVENTA.ID_VENTA )
inner join empleado e on venta.id_empleado = e.id_empleado)
inner join cliente c on venta.id_cliente = c.id_cliente)
inner join inventario inv on detventa.codigo_barras = inv.codigo_barras)
inner join producto p on p.id_producto=inv.id_producto)
group by VENTA.ID_VENTA,venta.fecha_venta,e.nombre,e.apellido,c.documento,c.nombre,c.apellido,p.nombre,inv.precio_venta
;

commit;